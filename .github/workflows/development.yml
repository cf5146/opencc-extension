name: Development

on:
  push:
    branches: [develop]
  pull_request:
    branches: [develop]

jobs:
  dev-build:
    name: Development Build
    runs-on: ubuntu-latest

    strategy:
      matrix:
        browser: [chrome, firefox, edge]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile

      - name: Build extension for ${{ matrix.browser }}
        run: MODE=development BROWSER=${{ matrix.browser }} node build.mjs ./build

      - name: Validate build output
        run: |
          test -f ./build/manifest.json
          test -f ./build/background.js
          test -f ./build/content.js
          test -f ./build/popup/index.html
          test -f ./build/options/index.html

      - name: Test extension loading (Chrome)
        if: matrix.browser == 'chrome'
        run: |
          pnpm exec web-ext lint -s ./build

      - name: Test extension loading (Firefox)
        if: matrix.browser == 'firefox'
        run: |
          pnpm exec web-ext lint -s ./build

  preview-changes:
    name: Preview Changes
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 8

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "pnpm"

      - name: Install dependencies
        run: pnpm install --frozen-lockfile || pnpm install --no-frozen-lockfile

      - name: Build all browsers
        run: |
          MODE=development BROWSER=chrome node build.mjs ./preview/chrome
          MODE=development BROWSER=firefox node build.mjs ./preview/firefox
          MODE=development BROWSER=edge node build.mjs ./preview/edge

      - name: Create preview packages
        run: |
          pnpm exec web-ext build -s ./preview/chrome -a ./preview-packages -n chrome-preview.zip --overwrite-dest
          pnpm exec web-ext build -s ./preview/firefox -a ./preview-packages -n firefox-preview.zip --overwrite-dest
          pnpm exec web-ext build -s ./preview/edge -a ./preview-packages -n edge-preview.zip --overwrite-dest

      - name: Upload preview artifacts
        uses: actions/upload-artifact@v4
        with:
          name: preview-builds-${{ github.event.pull_request.number }}
          path: ./preview-packages/
          retention-days: 7

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });

            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Preview builds are ready')
            );

            const body = `ðŸš€ **Preview builds are ready!**

            Download the preview builds from the [Actions tab](https://github.com/${context.repo.owner}/${context.repo.repo}/actions/runs/${context.runId}) to test your changes.

            Available builds:
            - Chrome extension
            - Firefox extension  
            - Edge extension

            The builds will be available for 7 days.`;

            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }
